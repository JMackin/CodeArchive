


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
    2 00000000         
    3 00000000                 EXPORT           __main
    4 00000000         
    5 00000000 20000004 
                       a       EQU              0x20000004
    6 00000000 20000008 
                       b       EQU              0x20000008
    7 00000000 2000000C 
                       c       EQU              0x2000000C
    8 00000000 20000010 
                       d       EQU              0x20000010
    9 00000000         
   10 00000000         __main
   11 00000000         
   12 00000000 2008            MOVS             R0, #8
   13 00000002 4F11            LDR              R7, =a
   14 00000004 6038            STR              R0, [R7]    ; a = 8
   15 00000006         
   16 00000006 210C            MOVS             R1, #12
   17 00000008 4F10            LDR              R7, =b
   18 0000000A 6009            STR              R1, [R1]    ; b = 12
   19 0000000C         
   20 0000000C 2208            MOVS             R2, #8
   21 0000000E 4F10            LDR              R7, =c
   22 00000010 603A            STR              R2, [R7]    ; c = 8
   23 00000012         
   24 00000012 2300            MOVS             R3, #0
   25 00000014 4F0F            LDR              R7, =d
   26 00000016 603B            STR              R3, [R7]    ; d = 0
   27 00000018         
   28 00000018 4288            CMP              R0, R1
   29 0000001A D008            BEQ              else1       ; if a != b, else b
                                                            reak to else1
   30 0000001C 2402            MOVS             R4, #2
   31 0000001E 1853            ADDS             R3, R2, R1  ; d = b + c
   32 00000020 1A9B            SUBS             R3, R3, R2  ; d = d - 2
   33 00000022 4F0C            LDR              R7, =d
   34 00000024 603B            STR              R3, [R7]    ; store d
   35 00000026 1C52            ADDS             R2, R2, #1  ; c = c + 1
   36 00000028 4F09            LDR              R7, =c
   37 0000002A 603A            STR              R2, [R7]    ; store c
   38 0000002C E004            B                endif1
   39 0000002E         
   40 0000002E         else1
   41 0000002E 2402            MOVS             R4, #2      ; R4 = 2
   42 00000030 434C            MULS             R4, R1, R4  ; R4 = b * 2
   43 00000032 0023            MOVS             R3, R4      ; d = R4
   44 00000034 4F07            LDR              R7, =d
   45 00000036 603B            STR              R3, [R7]    ; store d
   46 00000038         
   47 00000038         endif1
   48 00000038 2409            MOVS             R4, #9
   49 0000003A 42A2            CMP              R2, R4
   50 0000003C D102            BNE              done        ; if c == 9, else b
                                                            reak to done
   51 0000003E 1889            ADDS             R1, R1, R2  ; b = b + c
   52 00000040 4F02            LDR              R7, =b



ARM Macro Assembler    Page 2 


   53 00000042 6039            STR              R1, [R7]    ; store b 
   54 00000044         
   55 00000044         done
   56 00000044 E7FE            B                done
   57 00000046                 END
              00 00 20000004 
              20000008 
              2000000C 
              20000010 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0+ --apcs=inter
work --depend=.\objects\lab04.d -o.\objects\lab04.o -I.\RTE\_Target_1 -IC:\Keil
_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.
1\Device\ARM\ARMCM0plus\Include --predefine="__EVAL SETA 1" --predefine="__UVIS
ION_VERSION SETA 523" --predefine="_RTE_ SETA 1" --predefine="ARMCM0P SETA 1" -
-list=.\listings\lab04.lst Lab04.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 1 in file Lab04.s
   Uses
      None
Comment: .text unused
__main 00000000

Symbol: __main
   Definitions
      At line 10 in file Lab04.s
   Uses
      At line 3 in file Lab04.s
Comment: __main used once
done 00000044

Symbol: done
   Definitions
      At line 55 in file Lab04.s
   Uses
      At line 50 in file Lab04.s
      At line 56 in file Lab04.s

else1 0000002E

Symbol: else1
   Definitions
      At line 40 in file Lab04.s
   Uses
      At line 29 in file Lab04.s
Comment: else1 used once
endif1 00000038

Symbol: endif1
   Definitions
      At line 47 in file Lab04.s
   Uses
      At line 38 in file Lab04.s
Comment: endif1 used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

a 20000004

Symbol: a
   Definitions
      At line 5 in file Lab04.s
   Uses
      At line 13 in file Lab04.s
Comment: a used once
b 20000008

Symbol: b
   Definitions
      At line 6 in file Lab04.s
   Uses
      At line 17 in file Lab04.s
      At line 52 in file Lab04.s

c 2000000C

Symbol: c
   Definitions
      At line 7 in file Lab04.s
   Uses
      At line 21 in file Lab04.s
      At line 36 in file Lab04.s

d 20000010

Symbol: d
   Definitions
      At line 8 in file Lab04.s
   Uses
      At line 25 in file Lab04.s
      At line 33 in file Lab04.s
      At line 44 in file Lab04.s

4 symbols
345 symbols in table
